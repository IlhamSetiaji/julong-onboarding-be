basePath: /api
definitions:
  entity.TemplateTaskPriorityEnum:
    enum:
    - LOW
    - MEDIUM
    - HIGH
    type: string
    x-enum-varnames:
    - TEMPLATE_TASK_PRIORITY_ENUM_LOW
    - TEMPLATE_TASK_PRIORITY_ENUM_MEDIUM
    - TEMPLATE_TASK_PRIORITY_ENUM_HIGH
  entity.TemplateTaskStatusEnum:
    enum:
    - ACTIVE
    - INACTIVE
    type: string
    x-enum-varnames:
    - TEMPLATE_TASK_STATUS_ENUM_ACTIVE
    - TEMPLATE_TASK_STATUS_ENUM_INACTIVE
  multipart.FileHeader:
    properties:
      filename:
        type: string
      header:
        $ref: '#/definitions/textproto.MIMEHeader'
      size:
        type: integer
    type: object
  request.CreateTemplateTaskRequest:
    properties:
      cover_file:
        $ref: '#/definitions/multipart.FileHeader'
      cover_path:
        type: string
      description:
        type: string
      due_duration:
        type: integer
      name:
        type: string
      priority:
        type: string
      status:
        type: string
      template_task_attachments:
        items:
          $ref: '#/definitions/request.TemplateTaskAttachmentRequest'
        type: array
      template_task_checklists:
        items:
          $ref: '#/definitions/request.TemplateTaskChecklistRequest'
        type: array
    required:
    - cover_file
    - name
    - priority
    - status
    type: object
  request.TemplateTaskAttachmentRequest:
    properties:
      file:
        $ref: '#/definitions/multipart.FileHeader'
      path:
        type: string
    required:
    - file
    type: object
  request.TemplateTaskChecklistRequest:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.UpdateTemplateTaskRequest:
    properties:
      cover_file:
        $ref: '#/definitions/multipart.FileHeader'
      cover_path:
        type: string
      description:
        type: string
      due_duration:
        type: integer
      id:
        type: string
      name:
        type: string
      priority:
        type: string
      status:
        type: string
      template_task_attachments:
        items:
          $ref: '#/definitions/request.TemplateTaskAttachmentRequest'
        type: array
      template_task_checklists:
        items:
          $ref: '#/definitions/request.TemplateTaskChecklistRequest'
        type: array
    required:
    - cover_file
    - id
    - name
    - priority
    - status
    type: object
  response.CoverResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      path:
        type: string
      updated_at:
        type: string
    type: object
  response.TemplateTaskAttachmentResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      path:
        type: string
      template_task_id:
        type: string
      updated_at:
        type: string
    type: object
  response.TemplateTaskChecklistResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      template_task_id:
        type: string
      updated_at:
        type: string
    type: object
  response.TemplateTaskResponse:
    properties:
      coverPath:
        type: string
      created_at:
        type: string
      description:
        type: string
      due_duration:
        type: integer
      id:
        type: string
      name:
        type: string
      priority:
        $ref: '#/definitions/entity.TemplateTaskPriorityEnum'
      source:
        type: string
      status:
        $ref: '#/definitions/entity.TemplateTaskStatusEnum'
      template_task_attachments:
        items:
          $ref: '#/definitions/response.TemplateTaskAttachmentResponse'
        type: array
      template_task_checklists:
        items:
          $ref: '#/definitions/response.TemplateTaskChecklistResponse'
        type: array
      updated_at:
        type: string
    type: object
  response.UniversityResponse:
    properties:
      alpha_two_code:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  textproto.MIMEHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Julong Onboarding API Docs
  version: "1.0"
paths:
  /covers:
    get:
      consumes:
      - application/json
      description: Find all covers with pagination
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CoverResponse'
      security:
      - BearerAuth: []
      summary: Find all covers with pagination
      tags:
      - Covers
    post:
      consumes:
      - multipart/form-data
      description: Create a new cover
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.CoverResponse'
      security:
      - BearerAuth: []
      summary: Create a new cover
      tags:
      - Covers
  /covers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete cover by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete cover by id
      tags:
      - Covers
    get:
      consumes:
      - application/json
      description: Find cover by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CoverResponse'
      security:
      - BearerAuth: []
      summary: Find cover by id
      tags:
      - Covers
  /covers/update:
    put:
      consumes:
      - multipart/form-data
      description: Update cover by id
      parameters:
      - description: ID
        in: formData
        name: id
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CoverResponse'
      security:
      - BearerAuth: []
      summary: Update cover by id
      tags:
      - Covers
  /template-tasks:
    get:
      consumes:
      - application/json
      description: Find all template tasks with pagination
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Created At
        in: query
        name: created_at
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateTaskResponse'
      security:
      - BearerAuth: []
      summary: Find all template tasks with pagination
      tags:
      - Template Tasks
    post:
      consumes:
      - multipart/form-data
      description: Create new template task
      parameters:
      - description: Create Template Task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.CreateTemplateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TemplateTaskResponse'
      security:
      - BearerAuth: []
      summary: Create new template task
      tags:
      - Template Tasks
  /template-tasks/{id}:
    delete:
      description: Delete template task by id
      parameters:
      - description: Template Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete template task by id
      tags:
      - Template Tasks
    get:
      description: Find template task by id
      parameters:
      - description: Template Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateTaskResponse'
      security:
      - BearerAuth: []
      summary: Find template task by id
      tags:
      - Template Tasks
  /template-tasks/update:
    put:
      consumes:
      - multipart/form-data
      description: Update template task by id
      parameters:
      - description: Update Template Task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTemplateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TemplateTaskResponse'
      security:
      - BearerAuth: []
      summary: Update template task by id
      tags:
      - Template Tasks
  /universities:
    get:
      consumes:
      - application/json
      description: Find all universities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UniversityResponse'
      security:
      - BearerAuth: []
      summary: Find all universities
      tags:
      - Universities
securityDefinitions:
  BearerAuth:
    description: Bearer token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
