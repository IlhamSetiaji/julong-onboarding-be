{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Julong Onboarding API Docs",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8001",
    "basePath": "/api",
    "paths": {
        "/api/employee-task-attachments/{id}": {
            "get": {
                "description": "Find employee task attachment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task Attachments"
                ],
                "summary": "Find employee task attachment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Task Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskAttachmentResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete employee task attachment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task Attachments"
                ],
                "summary": "Delete employee task attachment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Task Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success delete employee task attachment",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/template-task-attachments/{id}": {
            "get": {
                "description": "Find template task attachment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Template Task Attachments"
                ],
                "summary": "Find template task attachment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Task Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TemplateTaskAttachmentResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete template task attachment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Template Task Attachments"
                ],
                "summary": "Delete template task attachment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Task Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success delete template task attachment",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all covers with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Find all covers with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CoverResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new cover",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Create a new cover",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.CoverResponse"
                        }
                    }
                }
            }
        },
        "/covers/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update cover by id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Update cover by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CoverResponse"
                        }
                    }
                }
            }
        },
        "/covers/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload cover",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Upload cover",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.CoverResponse"
                        }
                    }
                }
            }
        },
        "/covers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find cover by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Find cover by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CoverResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete cover by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covers"
                ],
                "summary": "Delete cover by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/employee-tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all employee task paginated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Find all employee task paginated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new employee task",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Create new employee task",
                "parameters": [
                    {
                        "description": "Create Template Task",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEmployeeTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            }
        },
        "/employee-tasks/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Count employee task by kanban and employee id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Count employee task by kanban and employee id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kanban",
                        "name": "kanban",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            }
        },
        "/employee-tasks/employee": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all employee task by employee id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Find all employee task by employee id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            }
        },
        "/employee-tasks/employee-kanban": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all employee task by employee id and kanban paginated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Find all employee task by employee id and kanban paginated",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kanban",
                        "name": "kanban",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            }
        },
        "/employee-tasks/employee-kanban/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Count kanban progress by employee id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Count kanban progress by employee id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskProgressResponse"
                        }
                    }
                }
            }
        },
        "/employee-tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find employee task by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Find employee task by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update employee task",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Update employee task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Employee Task",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateEmployeeTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmployeeTaskResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete employee task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Task"
                ],
                "summary": "Delete employee task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success delete employee task",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Find all events with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Find all events with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EventResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "description": "Event data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EventResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "description": "Event data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.EventResponse"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Find an event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Find an event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EventResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted"
                    }
                }
            }
        },
        "/template-tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all template tasks with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Template Tasks"
                ],
                "summary": "Find all template tasks with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TemplateTaskResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new template task",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Template Tasks"
                ],
                "summary": "Create new template task",
                "parameters": [
                    {
                        "description": "Create Template Task",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTemplateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.TemplateTaskResponse"
                        }
                    }
                }
            }
        },
        "/template-tasks/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update template task by id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Template Tasks"
                ],
                "summary": "Update template task by id",
                "parameters": [
                    {
                        "description": "Update Template Task",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTemplateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TemplateTaskResponse"
                        }
                    }
                }
            }
        },
        "/template-tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find template task by id",
                "tags": [
                    "Template Tasks"
                ],
                "summary": "Find template task by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TemplateTaskResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete template task by id",
                "tags": [
                    "Template Tasks"
                ],
                "summary": "Delete template task by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/universities": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Find all universities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Universities"
                ],
                "summary": "Find all universities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UniversityResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.EmployeeTaskKanbanEnum": {
            "type": "string",
            "enum": [
                "TO_DO",
                "IN_PROGRESS",
                "NEED_REVIEW",
                "COMPLETED"
            ],
            "x-enum-varnames": [
                "EMPLOYEE_TASK_KANBAN_ENUM_TODO",
                "EPMLOYEE_TASK_KANBAN_ENUM_IN_PROGRESS",
                "EMPLOYEE_TASK_KANBAN_ENUM_NEED_REVIEW",
                "EMPLOYEE_TASK_KANBAN_ENUM_COMPLETED"
            ]
        },
        "entity.EmployeeTaskPriorityEnum": {
            "type": "string",
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ],
            "x-enum-varnames": [
                "EMPLOYEE_TASK_PRIORITY_ENUM_LOW",
                "EMPLOYEE_TASK_PRIORITY_ENUM_MEDIUM",
                "EMPLOYEE_TASK_PRIORITY_ENUM_HIGH"
            ]
        },
        "entity.EmployeeTaskStatusEnum": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ],
            "x-enum-varnames": [
                "EMPLOYEE_TASK_STATUS_ENUM_ACTIVE",
                "EMPLOYEE_TASK_STATUS_ENUM_INACTIVE"
            ]
        },
        "entity.EventStatusEnum": {
            "type": "string",
            "enum": [
                "UPCOMING",
                "ONGOING",
                "FINISHED"
            ],
            "x-enum-varnames": [
                "EVENT_STATUS_ENUM_UPCOMING",
                "EVENT_STATUS_ENUM_ONGOING",
                "EVENT_STATUS_ENUM_FINISHED"
            ]
        },
        "entity.SurveyTemplateStatusEnum": {
            "type": "string",
            "enum": [
                "DRAFT",
                "SUBMITTED"
            ],
            "x-enum-varnames": [
                "SURVEY_TEMPLATE_STATUS_ENUM_DRAFT",
                "SURVEY_TEMPLATE_STATUS_ENUM_SUBMITTED"
            ]
        },
        "entity.TemplateTaskPriorityEnum": {
            "type": "string",
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ],
            "x-enum-varnames": [
                "TEMPLATE_TASK_PRIORITY_ENUM_LOW",
                "TEMPLATE_TASK_PRIORITY_ENUM_MEDIUM",
                "TEMPLATE_TASK_PRIORITY_ENUM_HIGH"
            ]
        },
        "entity.TemplateTaskStatusEnum": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ],
            "x-enum-varnames": [
                "TEMPLATE_TASK_STATUS_ENUM_ACTIVE",
                "TEMPLATE_TASK_STATUS_ENUM_INACTIVE"
            ]
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "request.CreateEmployeeTaskRequest": {
            "type": "object",
            "required": [
                "cover_path",
                "employee_id",
                "end_date",
                "name",
                "priority",
                "start_date"
            ],
            "properties": {
                "cover_path": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "employee_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.EmployeeTaskAttachmentRequest"
                    }
                },
                "employee_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.EmployeeTaskChecklistRequest"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "survey_template_id": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateEventRequest": {
            "type": "object",
            "required": [
                "end_date",
                "event_employees",
                "name",
                "start_date",
                "template_task_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "event_employees": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "employee_id"
                        ],
                        "properties": {
                            "employee_id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateTemplateTaskRequest": {
            "type": "object",
            "required": [
                "cover_path",
                "name",
                "organization_type",
                "priority",
                "status"
            ],
            "properties": {
                "cover_path": {
                    "description": "CoverFile               *multipart.FileHeader           `form:\"cover_file\" validate:\"required\"`",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_type": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "template_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TemplateTaskAttachmentRequest"
                    }
                },
                "template_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TemplateTaskChecklistRequest"
                    }
                }
            }
        },
        "request.EmployeeTaskAttachmentRequest": {
            "type": "object",
            "required": [
                "file"
            ],
            "properties": {
                "file": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.EmployeeTaskChecklistRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_checked": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "verified_by": {
                    "type": "string"
                }
            }
        },
        "request.TemplateTaskAttachmentRequest": {
            "type": "object",
            "required": [
                "file"
            ],
            "properties": {
                "file": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.TemplateTaskChecklistRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.UpdateEmployeeTaskRequest": {
            "type": "object",
            "required": [
                "cover_path",
                "employee_id",
                "end_date",
                "id",
                "name",
                "priority",
                "start_date"
            ],
            "properties": {
                "cover_path": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "employee_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.EmployeeTaskAttachmentRequest"
                    }
                },
                "employee_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.EmployeeTaskChecklistRequest"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_done": {
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO"
                    ]
                },
                "kanban": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "proof": {
                    "$ref": "#/definitions/multipart.FileHeader"
                },
                "proof_path": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "survey_template_id": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                },
                "verified_by": {
                    "type": "string"
                }
            }
        },
        "request.UpdateEventRequest": {
            "type": "object",
            "required": [
                "end_date",
                "event_employees",
                "id",
                "name",
                "start_date",
                "template_task_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "event_employees": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "employee_id"
                        ],
                        "properties": {
                            "employee_id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTemplateTaskRequest": {
            "type": "object",
            "required": [
                "cover_path",
                "id",
                "name",
                "organization_type",
                "priority",
                "status"
            ],
            "properties": {
                "cover_path": {
                    "description": "CoverFile               *multipart.FileHeader           `form:\"cover_file\" validate:\"required\"`",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_type": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "template_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TemplateTaskAttachmentRequest"
                    }
                },
                "template_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TemplateTaskChecklistRequest"
                    }
                }
            }
        },
        "response.AnswerTypeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.CoverResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "path_origin": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.EmployeeTaskAttachmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "employee_task_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "path_origin": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.EmployeeTaskChecklistResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "employee_task_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_checked": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_by": {
                    "type": "string"
                },
                "verified_by_name": {
                    "type": "string"
                }
            }
        },
        "response.EmployeeTaskProgressResponse": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "employee_id": {
                    "type": "string"
                },
                "in_progress": {
                    "type": "integer"
                },
                "need_review": {
                    "type": "integer"
                },
                "to_do": {
                    "type": "integer"
                },
                "total_task": {
                    "type": "integer"
                }
            }
        },
        "response.EmployeeTaskResponse": {
            "type": "object",
            "properties": {
                "cover_path": {
                    "type": "string"
                },
                "cover_path_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "employee_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EmployeeTaskAttachmentResponse"
                    }
                },
                "employee_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EmployeeTaskChecklistResponse"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_checklist": {
                    "type": "string"
                },
                "is_done": {
                    "type": "string"
                },
                "kanban": {
                    "$ref": "#/definitions/entity.EmployeeTaskKanbanEnum"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/entity.EmployeeTaskPriorityEnum"
                },
                "progress": {
                    "type": "integer"
                },
                "progress_verified": {
                    "type": "integer"
                },
                "proof": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.EmployeeTaskStatusEnum"
                },
                "survey_template": {
                    "$ref": "#/definitions/response.SurveyTemplateResponse"
                },
                "template_task": {
                    "$ref": "#/definitions/response.TemplateTaskResponse"
                },
                "template_task_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_by": {
                    "type": "string"
                },
                "verified_by_name": {
                    "type": "string"
                }
            }
        },
        "response.EventEmployeeResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.EventResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "event_employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EventEmployeeResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.EventStatusEnum"
                },
                "template_task": {
                    "$ref": "#/definitions/response.TemplateTaskResponse"
                },
                "template_task_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.QuestionOptionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "option_text": {
                    "type": "string"
                },
                "question_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.QuestionResponse": {
            "type": "object",
            "properties": {
                "answer_type": {
                    "$ref": "#/definitions/response.AnswerTypeResponse"
                },
                "answer_type_id": {
                    "type": "string"
                },
                "attachment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_completed": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "question_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.QuestionOptionResponse"
                    }
                },
                "survey_responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SurveyResponseResponse"
                    }
                },
                "survey_template_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.SurveyResponseResponse": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "employee_task_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "question_id": {
                    "type": "string"
                },
                "survey_template_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.SurveyTemplateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.QuestionResponse"
                    }
                },
                "status": {
                    "$ref": "#/definitions/entity.SurveyTemplateStatusEnum"
                },
                "survey_number": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.TemplateTaskAttachmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "path_origin": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.TemplateTaskChecklistResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "template_task_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.TemplateTaskResponse": {
            "type": "object",
            "properties": {
                "cover_path": {
                    "type": "string"
                },
                "cover_path_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_type": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/entity.TemplateTaskPriorityEnum"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entity.TemplateTaskStatusEnum"
                },
                "template_task_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TemplateTaskAttachmentResponse"
                    }
                },
                "template_task_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TemplateTaskChecklistResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.UniversityResponse": {
            "type": "object",
            "properties": {
                "alpha_two_code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer token for authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}